name: Terraform Apply with Gmail Notification

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set inline JSON metadata
        id: set
        run: |
          echo '{
            "PRODUCT_NAME": "EC2Module",
            "ENVIRONMENT": "dev",
            "TEAM": "cloud-team",
            "VERSION": "v1.0.1",
            "SERVICE": "ec2",
            "CLUSTER": "sandbox"
          }' > deployment.json

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ./ec2_module/test
        run: terraform init

      - name: Terraform Plan
        working-directory: ./ec2_module/test
        run: terraform plan

      - name: Terraform Apply
        working-directory: ./ec2_module/test
        run: terraform apply -auto-approve

      - name: Send Gmail Notification
        env:
          GMAIL_USER: ${{ secrets.GMAIL_USER }}
          GMAIL_PASS: ${{ secrets.GMAIL_PASS }}
          EMAIL_TO: ${{ secrets.EMAIL_TO }}
        run: |
          sudo apt-get update && sudo apt-get install -y msmtp-mta mailutils jq

          cat <<EOF > ~/.msmtprc
defaults
tls on
tls_starttls on
auth on
host smtp.gmail.com
port 587
user ${GMAIL_USER}
password ${GMAIL_PASS}
from ${GMAIL_USER}
logfile ~/.msmtp.log
EOF

          chmod 600 ~/.msmtprc

          jq -r 'to_entries[] | "\(.key)=\(.value)"' deployment.json > env_vars.txt
          while IFS= read -r line; do export "$line"; done < env_vars.txt

          echo "✅ Terraform Apply Successful

Product     : $PRODUCT_NAME
Environment : $ENVIRONMENT
Team        : $TEAM
Service     : $SERVICE
Version     : $VERSION
Cluster     : $CLUSTER
Repository  : ${{ github.repository }}
Triggered By: ${{ github.actor }}" | mail -s "✅ Terraform Apply: $PRODUCT_NAME ($ENVIRONMENT)" -aFrom:${GMAIL_USER} ${EMAIL_TO}
