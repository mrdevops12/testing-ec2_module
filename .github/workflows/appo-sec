kubectl get secret kube-prometheus-stack-prometheus-scrape-confg -n monitoring -o yaml > backup-prometheus-scrape-config.yaml

kubectl get secret kube-prometheus-stack-prometheus-scrape-confg -n monitoring -o jsonpath='{.data.additional-scrape-configs}' | base64 -d > prometheus-scrape.yaml



- job_name: 'awx-api-metrics'
  metrics_path: /api/v2/metrics/
  scheme: https
  static_configs:
    - targets: ['awx.devops-tools.prd.aws.qdx.com']
  tls_config:
    insecure_skip_verify: true



cat <<EOF > prometheus-scrape.yaml
- job_name: 'awx-api-metrics'
  metrics_path: /api/v2/metrics/
  scheme: https
  static_configs:
    - targets: ['awx.devops-tools.prd.aws.qdx.com']
  tls_config:
    insecure_skip_verify: true
EOF





kubectl create secret generic kube-prometheus-stack-prometheus-scrape-confg \
  --from-file=additional-scrape-configs=prometheus-scrape.yaml \
  -n monitoring \
  --dry-run=client -o yaml | kubectl apply -f -


kubectl delete pod -l app=prometheus -n monitoring

kubectl delete pod -l prometheus=kube-prometheus-stack-prometheus -n monitoring


kubectl -n monitoring exec -it prometheus-kube-prometheus-stack-prometheus-0 -- grep -A10 "awx-api-metrics" /etc/prometheus/config_out/prometheus.env.yaml

kubectl get secret kube-prometheus-stack-prometheus-scrape-confg -n monitoring -o jsonpath='{.data.additional-scrape-configs}' | base64 -d

kubectl get prometheus -n monitoring kube-prometheus-stack-prometheus -o yaml | grep -A5 additionalScrapeConfigs

kubectl create secret generic kube-prometheus-stack-prometheus-scrape-confg \
  -n monitoring \
  --from-file=additional-scrape-configs.yaml=/root/promethus-apollo-secret/prometheus-scrape.yaml \
  --dry-run=client -o yaml | kubectl apply -f -


kubectl create secret generic kube-prometheus-stack-prometheus-scrape-confg \
  -n monitoring \
  --from-file=additional-scrape-configs.yaml=/root/promethus-apollo-secret/prometheus-scrape.yaml \
  --dry-run=client -o yaml | kubectl apply -f -


kubectl -n monitoring exec -it prometheus-kube-prometheus-stack-prometheus-0 \
  -- grep -A10 "awx-api-metrics" /etc/prometheus/config_out/prometheus.env.yaml




- job_name: 'awx-api-metrics'
  metrics_path: /api/v2/metrics/
  scheme: https
  scrape_interval: 15s
  static_configs:
    - targets: ['awx.devops-tools.prd.aws.qdx.com']
  tls_config:
    insecure_skip_verify: true
  authorization:
    type: Bearer
    credentials: "J4dxvtZXbeBzMNZt9VUETWCLZQIS89"



kubectl create secret generic kube-prometheus-stack-prometheus-scrape-confg \
  -n monitoring \
  --from-file=additional-scrape-configs.yaml=/root/prometheus-apollo-secrect/prometheus-scrape.yaml \
  --dry-run=client -o yaml | kubectl apply -f -



kubectl create secret generic kube-prometheus-stack-prometheus-scrape-config \
  -n monitoring \
  --from-file=additional-scrape-configs.yaml=/root/prometheus-apollo-secrect/prometheus-scrape.yaml \
  --dry-run=client -o yaml | kubectl apply -f -


kubectl delete secret kube-prometheus-stack-prometheus-scrape-confg -n monitoring

kubectl create secret generic kube-prometheus-stack-prometheus-scrape-config \
  -n monitoring \
  --from-file=additional-scrape-configs.yaml=/root/prometheus-apollo-secrect/prometheus-scrape.yaml \
  --dry-run=client -o yaml | kubectl apply -f -

kubectl get secret kube-prometheus-stack-prometheus-scrape-config -n monitoring


kubectl delete secret kube-prometheus-stack-prometheus-scrape-confg -n monitoring

kubectl create secret generic kube-prometheus-stack-prometheus-scrape-config \
  -n monitoring \
  --from-file=additional-scrape-configs.yaml=/root/prometheus-apollo-secrect/prometheus-scrape.yaml \
  --dry-run=client -o yaml | kubectl apply -f -


kubectl get secret kube-prometheus-stack-prometheus-scrape-config -n monitoring

kubectl delete pod -l app.kubernetes.io/name=prometheus -n monitoring

kubectl -n monitoring exec -it prometheus-kube-prometheus-stack-prometheus-0 -- \
grep -A10 "awx-api-metrics" /etc/prometheus/config_out/prometheus.env.yaml


kubectl -n monitoring get prometheus kube-prometheus-stack-prometheus -o yaml | grep -A4 additionalScrapeConfigs


kubectl -n monitoring patch prometheus kube-prometheus-stack-prometheus --type='merge' -p '{
  "spec": {
    "additionalScrapeConfigs": {
      "name": "kube-prometheus-stack-prometheus-scrape-config",
      "key": "additional-scrape-configs.yaml"
    }
  }
}'

kubectl delete pod -l app.kubernetes.io/name=prometheus -n monitoring



- job_name: 'awx-api-metrics'
  metrics_path: /api/v2/metrics/
  scheme: https
  scrape_interval: 15s
  static_configs:
    - targets: ['awx.devops-tools.prd.aws.qdx.com']
  tls_config:
    insecure_skip_verify: true
  authorization:
    type: Bearer
    credentials: J4dxvtZXbeBzMNZt9VUETWCLZQIS89



kubectl delete secret kube-prometheus-stack-prometheus-scrape-config -n monitoring
kubectl create secret generic kube-prometheus-stack-prometheus-scrape-config \
  -n monitoring \
  --from-file=additional-scrape-configs.yaml=/root/prometheus-apollo-secrect/prometheus-scrape.yaml



kubectl delete secret kube-prometheus-stack-prometheus-scrape-config -n monitoring


cat <<EOF > /root/prometheus-apollo-secrect/prometheus-scrape.yaml
- job_name: 'awx-api-metrics'
  metrics_path: /api/v2/metrics/
  scheme: https
  scrape_interval: 15s
  static_configs:
    - targets: ['awx.devops-tools.prd.aws.qdx.com']
  tls_config:
    insecure_skip_verify: true
  authorization:
    type: Bearer
    credentials: J4dxvtZXbeBzMNZt9VUETWCLZQIS89
EOF


cat /root/prometheus-apollo-secrect/prometheus-scrape.yaml

kubectl create secret generic kube-prometheus-stack-prometheus-scrape-config \
  -n monitoring \
  --from-file=additional-scrape-configs.yaml=/root/prometheus-apollo-secrect/prometheus-scrape.yaml


kubectl -n monitoring exec -it prometheus-kube-prometheus-stack-prometheus-0 -- \
grep -A10 "awx-api-metrics" /etc/prometheus/config_out/prometheus.env.yaml



cat <<EOF > /root/prometheus-apollo-secrect/prometheus-scrape.yaml
- job_name: 'awx-api-metrics'
  metrics_path: /api/v2/metrics/
  scheme: https
  scrape_interval: 15s
  static_configs:
  - targets: ['awx.devops-tools.prd.aws.qdx.com']
  tls_config:
    insecure_skip_verify: true
  authorization:
    type: Bearer
    credentials_file: /etc/prometheus/secrets/awx-token/token
EOF


kubectl create secret generic awx-token-secret \
  -n monitoring \
  --from-literal=token=J4dxvtZXbeBzMNZt9VUETWCLZQIS89




kubectl -n monitoring patch prometheus kube-prometheus-stack-prometheus \
  --type='merge' \
  -p '{"spec":{"secrets":["awx-token-secret"]}}'



kubectl delete secret kube-prometheus-stack-prometheus-scrape-config -n monitoring
kubectl create secret generic kube-prometheus-stack-prometheus-scrape-config \
  -n monitoring \
  --from-file=additional-scrape-configs.yaml=/root/prometheus-apollo-secrect/prometheus-scrape.yaml


kubectl -n monitoring patch prometheus kube-prometheus-stack-prometheus \
  --type='merge' \
  -p '{
    "spec": {
      "secrets": [
        "awx-token-secret",
        "kube-prometheus-stack-prometheus-scrape-config"
      ]
    }
  }'




kubectl get secret awx-token-secret -n monitoring
kubectl get secret kube-prometheus-stack-prometheus-scrape-config -n monitoring

kubectl -n monitoring exec -it prometheus-kube-prometheus-stack-prometheus-0 -- ls /etc/prometheus/secrets

kubectl -n monitoring patch prometheus kube-prometheus-stack-prometheus \
  --type='merge' \
  -p '{
    "spec": {
      "secrets": [
        "awx-token-secret",
        "kube-prometheus-stack-prometheus-scrape-config"
      ],
      "additionalScrapeConfigs": {
        "name": "kube-prometheus-stack-prometheus-scrape-config",
        "key": "additional-scrape-configs.yaml"
      }
    }
  }'


kubectl -n monitoring exec -it prometheus-kube-prometheus-stack-prometheus-0 -- \
grep -A10 "awx-api-metrics" /etc/prometheus/config_out/prometheus.env.yaml



kubectl delete secret kube-prometheus-stack-prometheus-scrape-config -n monitoring

kubectl create secret generic kube-prometheus-stack-prometheus-scrape-config \
  -n monitoring \
  --from-file=additional-scrape-configs.yaml=/root/prometheus-apollo-secrect/prometheus-scrape.yaml


kubectl -n monitoring patch prometheus kube-prometheus-stack-prometheus \
  --type='merge' \
  -p '{
    "spec": {
      "secrets": [
        "awx-token-secret",
        "kube-prometheus-stack-prometheus-scrape-config"
      ],
      "additionalScrapeConfigs": {
        "name": "kube-prometheus-stack-prometheus-scrape-config",
        "key": "additional-scrape-configs.yaml"
      }
    }
  }'






kubectl delete secret kube-prometheus-stack-prometheus-scrape-config -n monitoring --ignore-not-found
kubectl delete secret awx-token-secret -n monitoring --ignore-not-found
kubectl delete secret awx-token -n monitoring --ignore-not-found


kubectl create secret generic awx-token -n monitoring \
  --from-literal=token=J4dxvtZXbeBzMNZt9VUETWCLZQIS89


cat <<EOF > /root/prometheus-apollo-secrect/prometheus-scrape.yaml
- job_name: 'awx-api-metrics'
  metrics_path: /api/v2/metrics/
  scheme: https
  scrape_interval: 15s
  static_configs:
    - targets: ['awx.devops-tools.prd.aws.qdx.com']
  tls_config:
    insecure_skip_verify: true
  authorization:
    type: Bearer
    credentials_file: /etc/prometheus/secrets/awx-token/token
EOF


kubectl create secret generic kube-prometheus-stack-prometheus-scrape-config \
  -n monitoring \
  --from-file=additional-scrape-configs.yaml=/root/prometheus-apollo-secrect/prometheus-scrape.yaml


kubectl -n monitoring patch prometheus kube-prometheus-stack-prometheus \
  --type='merge' \
  -p '{
    "spec": {
      "secrets": [
        "awx-token",
        "kube-prometheus-stack-prometheus-scrape-config"
      ],
      "additionalScrapeConfigs": {
        "name": "kube-prometheus-stack-prometheus-scrape-config",
        "key": "additional-scrape-configs.yaml"
      }
    }
  }'


kubectl delete pod -l app.kubernetes.io/name=prometheus -n monitoring
kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=prometheus -n monitoring --timeout=120s


kubectl -n monitoring exec -it prometheus-kube-prometheus-stack-prometheus-0 -- \
grep -A10 "awx-api-metrics" /etc/prometheus/config_out/prometheus.env.yaml






cat <<EOF > /root/awx-additional-scrape.yaml
- job_name: 'awx-api-metrics'
  metrics_path: /api/v2/metrics/
  scheme: https
  scrape_interval: 15s
  static_configs:
    - targets: ['awx.devops-tools.prd.aws.qdx.com']
  tls_config:
    insecure_skip_verify: true
  bearer_token: /etc/prometheus/secrets/awx-token/token
EOF



kubectl create configmap awx-additional-scrape \
  -n monitoring \
  --from-file=awx-additional-scrape.yaml=/root/awx-additional-scrape.yaml


kubectl -n monitoring patch prometheus kube-prometheus-stack-prometheus \
  --type='merge' \
  -p '{
    "spec": {
      "volumes": [
        {
          "name": "awx-scrape-config",
          "configMap": { "name": "awx-additional-scrape" }
        },
        {
          "name": "awx-token-secret",
          "secret": { "secretName": "awx-token" }
        }
      ],
      "volumeMounts": [
        {
          "name": "awx-scrape-config",
          "mountPath": "/etc/prometheus/config_out/awx-additional-scrape.yaml",
          "subPath": "awx-additional-scrape.yaml"
        },
        {
          "name": "awx-token-secret",
          "mountPath": "/etc/prometheus/secrets/awx-token"
        }
      ]
    }
  }'


kubectl delete pod -l app.kubernetes.io/name=prometheus -n monitoring
kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=prometheus -n monitoring --timeout=180s

kubectl delete pod -l app.kubernetes.io/name=prometheus -n monitoring --force --grace-period=0

kubectl -n monitoring exec -it prometheus-kube-prometheus-stack-prometheus-0 -- ls /etc/prometheus/secrets/




kubectl get svc -n monitoring | grep prometheus
kubectl describe svc kube-prometheus-stack-prometheus -n monitoring | grep -A5 Endpoints

kubectl label pod -n monitoring prometheus-kube-prometheus-stack-prometheus-0 app.kubernetes.io/name=prometheus --overwrite

kubectl delete pod -n monitoring prometheus-kube-prometheus-stack-prometheus-0

kubectl get ingress -n monitoring
kubectl describe ingress -n monitoring | grep -A2 prometheus
kubectl -n monitoring exec -it prometheus-kube-prometheus-stack-prometheus-0 -- curl -s -o /dev/null -w "%{http_code}\n" http://localhost:9090


kubectl delete prometheus,kubeletservice,servicemonitor,alertmanager,podmonitor -n monitoring --all

helm uninstall kube-prometheus-stack -n monitoring

kubectl delete all,cm,secret,sa,svc,svcaccount,pvc,pv,ingress,deploy,sts,ds -n monitoring --selector=app=kube-prometheus-stack
kubectl delete secret kube-prometheus-stack-prometheus-scrape-config -n monitoring --ignore-not-found
kubectl delete secret awx-token-secret -n monitoring --ignore-not-found

kubectl get crd | grep monitoring.coreos.com | awk '{print $1}' | xargs kubectl delete crd --ignore-not-found


kubectl create secret generic awx-token-secret \
  --from-literal=awx-token=J4dxtvZBxeBMNzZ9UETWCIZQI589 \
  -n monitoring



kubectl edit statefulset kube-prometheus-stack-prometheus -n monitoring

- name: awx-token
  secret:
    secretName: awx-token-secret



- name: awx-token
  mountPath: /etc/prometheus/secrets
  readOnly: true


- job_name: 'awx'
  scheme: https
  metrics_path: /api/v2/metrics
  scrape_interval: 15s
  bearer_token: /etc/prometheus/secrets/awx-token
  tls_config:
    insecure_skip_verify: true
  static_configs:
    - targets:
      - devops-tools.prd.aws.qdx.com


kubectl rollout restart statefulset kube-prometheus-stack-prometheus -n monitoring





kubectl -n monitoring patch statefulset kube-prometheus-stack-prometheus \
  --type='merge' \
  -p '{
    "spec": {
      "template": {
        "spec": {
          "volumes": [
            {
              "name": "awx-token",
              "secret": {
                "secretName": "awx-token-secret"
              }
            }
          ],
          "containers": [
            {
              "name": "prometheus",
              "volumeMounts": [
                {
                  "name": "awx-token",
                  "mountPath": "/etc/prometheus/secrets",
                  "readOnly": true
                }
              ]
            }
          ]
        }
      }
    }
  }'





kubectl rollout restart statefulset kube-prometheus-stack-prometheus -n monitoring


kubectl -n monitoring exec -it prometheus-kube-prometheus-stack-prometheus-0 -- ls /etc/prometheus/secrets/
kubectl -n monitoring exec -it prometheus-kube-prometheus-stack-prometheus-0 -- cat /etc/prometheus/secrets/awx-token




kubectl -n monitoring get pod prometheus-kube-prometheus-stack-prometheus-0 -o jsonpath='{.spec.containers[*].name}'

kubectl -n monitoring patch statefulset prometheus-kube-prometheus-stack-prometheus \
  --type='merge' \
  -p '{
    "spec": {
      "template": {
        "spec": {
          "volumes": [
            {
              "name": "awx-token",
              "secret": {
                "secretName": "awx-token-secret"
              }
            }
          ],
          "containers": [
            {
              "name": "prometheus-kube-prometheus-stack-prometheus",
              "volumeMounts": [
                {
                  "name": "awx-token",
                  "mountPath": "/etc/prometheus/secrets",
                  "readOnly": true
                }
              ]
            }
          ]
        }
      }
    }
  }'



kubectl rollout restart statefulset prometheus-kube-prometheus-stack-prometheus -n monitoring

kubectl -n monitoring exec -it prometheus-kube-prometheus-stack-prometheus-0 -- ls /etc/prometheus/secrets/





kubectl -n monitoring patch statefulset prometheus-kube-prometheus-stack-prometheus \
--type='json' \
-p='[
  {
    "op": "add",
    "path": "/spec/template/spec/volumes/-",
    "value": {
      "name": "awx-token",
      "secret": {
        "secretName": "awx-token-secret"
      }
    }
  },
  {
    "op": "add",
    "path": "/spec/template/spec/containers/0/volumeMounts/-",
    "value": {
      "name": "awx-token",
      "mountPath": "/etc/prometheus/secrets",
      "readOnly": true
    }
  }
]'


kubectl rollout restart statefulset prometheus-kube-prometheus-stack-prometheus -n monitoring

kubectl -n monitoring exec -it prometheus-kube-prometheus-stack-prometheus-0 -- ls /etc/prometheus/secrets/



kubectl -n monitoring get pod prometheus-kube-prometheus-stack-prometheus-0 -o jsonpath='{.spec.containers[*].name}'



kubectl -n monitoring patch statefulset prometheus-kube-prometheus-stack-prometheus \
--type='json' \
-p='[
  {
    "op": "add",
    "path": "/spec/template/spec/volumes/-",
    "value": {
      "name": "awx-token",
      "secret": {
        "secretName": "awx-token-secret"
      }
    }
  },
  {
    "op": "add",
    "path": "/spec/template/spec/containers/0/volumeMounts/-",
    "value": {
      "name": "awx-token",
      "mountPath": "/etc/prometheus/secrets",
      "readOnly": true
    }
  }
]'



kubectl rollout restart statefulset prometheus-kube-prometheus-stack-prometheus -n monitoring


kubectl -n monitoring exec -it prometheus-kube-prometheus-stack-prometheus-0 -- ls /etc/prometheus/secrets/


