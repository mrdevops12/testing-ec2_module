name: Sync Prometheus chart to ECR (under actions/ namespace)

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Prometheus chart version (e.g. 77.6.0)"
        required: true
      chart_name:
        description: "Chart name"
        required: true
        default: kube-prometheus-stack

env:
  AWS_REGION: us-east-1
  AWS_ROLE: arn:aws:iam::817786531545:role/iam-role-gh-runner-oidc-access
  REGISTRY: 817786531545.dkr.ecr.us-east-1.amazonaws.com
  SRC_HELM_REPO: https://prometheus-community.github.io/helm-charts

jobs:
  sync:
    runs-on: ${{ vars.BXD_GITHUB_RUNNER }}   # e.g. arc-rs-nonprod
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      # >>> Create the *full* repo path actions/prometheus/<chart>
      - name: Ensure ECR repo exists (actions/prometheus/<chart>)
        env:
          REPO: actions/prometheus/${{ inputs.chart_name }}
        run: |
          set -e
          aws ecr describe-repositories \
            --repository-names "$REPO" \
            --region "$AWS_REGION" >/dev/null 2>&1 || \
          aws ecr create-repository \
            --repository-name "$REPO" \
            --region "$AWS_REGION"

      - name: Login to ECR (for Helm/OCI)
        run: |
          aws ecr get-login-password --region $AWS_REGION \
            | helm registry login --username AWS --password-stdin $REGISTRY

      - name: Pull Prometheus chart
        run: |
          helm repo add prometheus-community "$SRC_HELM_REPO"
          helm repo update
          helm pull prometheus-community/${{ inputs.chart_name }} --version ${{ inputs.version }}

      - name: Push chart into ECR (actions/prometheus/<chart>)
        env:
          TARGET_REPO: actions/prometheus/${{ inputs.chart_name }}
        run: |
          set -euo pipefail
          FILE=$(ls ${{ inputs.chart_name }}-*.tgz)
          echo "Pushing $FILE to oci://$REGISTRY/$TARGET_REPO"
          helm push "$FILE" oci://$REGISTRY/$TARGET_REPO
