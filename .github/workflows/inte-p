values = [
  yamlencode({
    grafana = {
      enabled     = true
      persistence = {
        enabled          = true
        size             = "10Gi"
        type             = "pvc"
        storageClassName = "gp3"       # <— add
      }
      ingress = {
        enabled          = true
        ingressClassName = "alb"
        annotations = {
          "kubernetes.io/ingress.class"                = "alb"
          "alb.ingress.kubernetes.io/scheme"           = var.prometheus_alb_scheme
          "alb.ingress.kubernetes.io/target-type"      = "ip"
          "alb.ingress.kubernetes.io/healthcheck-path" = "/login"
          "alb.ingress.kubernetes.io/success-codes"    = "200-399"
          "alb.ingress.kubernetes.io/healthcheck-port" = "traffic-port"
          "alb.ingress.kubernetes.io/group.name"       = var.monitoring_alb_group
          "alb.ingress.kubernetes.io/group.order"      = "20"
        }
        hosts    = [var.grafana_host]
        paths    = ["/"]
        pathType = "Prefix"
      }
    }

    prometheus = {
      ingress = {
        enabled          = true
        ingressClassName = "alb"
        annotations = {
          "kubernetes.io/ingress.class"                = "alb"
          "alb.ingress.kubernetes.io/scheme"           = var.prometheus_alb_scheme
          "alb.ingress.kubernetes.io/target-type"      = "ip"
          "alb.ingress.kubernetes.io/healthcheck-path" = "/-/healthy"
          "alb.ingress.kubernetes.io/success-codes"    = "200"
          "alb.ingress.kubernetes.io/healthcheck-port" = "traffic-port"
          "alb.ingress.kubernetes.io/group.name"       = var.monitoring_alb_group
          "alb.ingress.kubernetes.io/group.order"      = "20"
        }
        hosts    = [var.prometheus_host]
        paths    = ["/"]
        pathType = "Prefix"
      }

      prometheusSpec = {
        storageSpec = {
          volumeClaimTemplate = {
            spec = {
              accessModes      = ["ReadWriteOnce"]
              storageClassName = "gp3"    # <— add
              resources = {
                requests = { storage = "10Gi" }
              }
            }
          }
        }
      }
    }

    alertmanager = {
      enabled = true
      ingress = { enabled = false }  # internal only

      alertmanagerSpec = {
        storage = {
          volumeClaimTemplate = {
            spec = {
              accessModes      = ["ReadWriteOnce"]
              storageClassName = "gp3"    # <— add
              resources = {
                requests = { storage = "10Gi" }
              }
            }
          }
        }
      }
    }
  }),
  file("${path.module}/arc-scrape-config.yaml"),
]
