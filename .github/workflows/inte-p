resource "helm_release" "prometheus_stack" {
  name       = "kube-prometheus-stack"
  namespace  = var.namespace
  repository = "https://prometheus-community.github.io/helm-charts"
  chart      = "kube-prometheus-stack"
  version    = var.kps_chart_version  # null = latest
  # If the namespace already exists, you can set this false. True is safer.
  create_namespace = false

  # IMPORTANT: keep your existing scrape config include if you have it
  values = [
    yamlencode({
      grafana = {
        enabled     = true
        persistence = {
          enabled          = true
          size             = "10Gi"
          storageClassName = var.storage_class_name
          type             = "pvc"
        }
        ingress = {
          enabled          = true
          ingressClassName = "alb"
          annotations = {
            "kubernetes.io/ingress.class"                = "alb"
            "alb.ingress.kubernetes.io/scheme"           = var.prometheus_alb_scheme
            "alb.ingress.kubernetes.io/target-type"      = "ip"
            "alb.ingress.kubernetes.io/healthcheck-path" = "/login"
            "alb.ingress.kubernetes.io/success-codes"    = "200-399"
            "alb.ingress.kubernetes.io/healthcheck-port" = "traffic-port"
            "alb.ingress.kubernetes.io/group.name"       = "monitoring"
            "alb.ingress.kubernetes.io/group.order"      = "20"
          }
          hosts    = [var.grafana_host]
          paths    = ["/"]
          pathType = "Prefix"
        }
      }

      prometheus = {
        ingress = {
          enabled          = true
          ingressClassName = "alb"
          annotations = {
            "kubernetes.io/ingress.class"                = "alb"
            "alb.ingress.kubernetes.io/scheme"           = var.prometheus_alb_scheme
            "alb.ingress.kubernetes.io/target-type"      = "ip"
            "alb.ingress.kubernetes.io/healthcheck-path" = "/-/healthy"
            "alb.ingress.kubernetes.io/success-codes"    = "200"
            "alb.ingress.kubernetes.io/healthcheck-port" = "traffic-port"
            "alb.ingress.kubernetes.io/group.name"       = "monitoring"
            "alb.ingress.kubernetes.io/group.order"      = "20"
          }
          hosts    = [var.prometheus_host]
          paths    = ["/"]
          pathType = "Prefix"
        }

        # 10Gi persistence for Prometheus TSDB
        prometheusSpec = {
          storageSpec = {
            volumeClaimTemplate = {
              spec = {
                accessModes      = ["ReadWriteOnce"]
                storageClassName = var.storage_class_name
                resources = {
                  requests = { storage = "10Gi" }
                }
              }
            }
          }
        }
      }

      alertmanager = {
        enabled = true
        ingress = { enabled = false } # keep internal (best practice)

        # 10Gi persistence for Alertmanager state
        alertmanagerSpec = {
          storage = {
            volumeClaimTemplate = {
              spec = {
                accessModes      = ["ReadWriteOnce"]
                storageClassName = var.storage_class_name
                resources = {
                  requests = { storage = "10Gi" }
                }
              }
            }
          }
        }
      }
    }),
    # Keep this line only if you actually have the file; otherwise remove it.
    file("${path.module}/arc-scrape-config.yaml"),
  ]
}
