name: Terraform Deploy and Gmail Notification

on:
  workflow_dispatch:
    inputs:
      ENVIRONMENT:
        description: 'Deployment environment name'
        required: true
        type: string
      ARTIFACT_BRANCH:
        description: 'Artifact Branch'
        required: true
        type: string
      ARTIFACT_VERSION:
        description: 'Artifact Version'
        required: true
        type: string

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.set-result.outputs.result }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ./ec2_module/test
        run: terraform init

      - name: Terraform Plan
        working-directory: ./ec2_module/test
        run: terraform plan --var-file="test.tfvars" -input=false

      - name: Terraform Apply
        working-directory: ./ec2_module/test
        run: terraform apply --var-file="test.tfvars" -auto-approve -input=false

      - name: Set Deployment Status
        id: set-result
        run: echo "result=success" >> $GITHUB_OUTPUT

  notify-gmail:
    needs: terraform-apply
    if: always()
    uses: ./.github/workflows/gmailNotification.yaml
    with:
      PRODUCT_NAME: EC2Module
      ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
      ARTIFACT_BRANCH: ${{ inputs.ARTIFACT_BRANCH }}
      ARTIFACT_VERSION: ${{ inputs.ARTIFACT_VERSION }}
      DEPLOYMENT_STATUS: ${{ needs.terraform-apply.outputs.result }}
    secrets:
      GMAIL_USER: ${{ secrets.GMAIL_USER }}
      GMAIL_PASS: ${{ secrets.GMAIL_PASS }}
      EMAIL_TO: ${{ secrets.EMAIL_TO }}
