name: Project A Notification

on:
  workflow_dispatch:
    inputs:
      ENV:
        description: 'Environment'
        required: true
        type: string
      BRANCH:
        description: 'Branch'
        required: true
        type: string
      VERSION:
        description: 'Version'
        required: true
        type: string

jobs:
  # ────────────────────────────────
  # 1) Build job: do your compile/tests/etc.
  # ────────────────────────────────
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run build/tests
        run: |
          # your build commands here
          echo "Building..."

  # ────────────────────────────────
  # 2) Prepare JSON (includes dynamic status)
  # ────────────────────────────────
  prepare-json:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      DEPLOY_META_JSON: ${{ steps.encode.outputs.DEPLOY_META_JSON }}
    steps:
      - name: Encode Project A JSON
        id: encode
        run: |
          JSON=$(jq -n \
            --arg product "Pathway" \
            --arg branch "${{ inputs.BRANCH }}" \
            --arg version "${{ inputs.VERSION }}" \
            --arg env "${{ inputs.ENV }}" \
            --arg status "${{ needs.build.result }}" \
            --arg build "${{ github.run_number }}" \
            '{
              product: $product,
              branch: $branch,
              version: $version,
              env: $env,
              status: $status,
              build: $build
            }')
          ENCODED=$(echo "$JSON" | base64 -w 0)
          echo "DEPLOY_META_JSON=$ENCODED" >> $GITHUB_OUTPUT

  # ────────────────────────────────
  # 3) Notify via Teams (reusable workflow)
  # ────────────────────────────────
  notify:
    needs: prepare-json
    uses: your-org/your-repo/.github/workflows/teams-notification-only.yml@main
    with:
      DEPLOY_META_JSON: ${{ needs.prepare-json.outputs.DEPLOY_META_JSON }}
    secrets:
      TEAMS_WEBHOOK_URL: ${{ secrets.DEVSECOPS_TEAMS_HOOK }}
