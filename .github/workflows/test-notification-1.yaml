name: Project A Notification

on:
  workflow_dispatch:
    inputs:
      ENV:
        description: 'Environment'
        required: true
        type: string
      BRANCH:
        description: 'Branch'
        required: true
        type: string
      RECIPIENTS:
        description: 'Comma-separated list of email addresses'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run build/tests
        run: |
          echo "Building..."
          # ← your real build commands here

  prepare-json:
    needs: build
    if: always()   # notify on both success & failure
    runs-on: ubuntu-latest
    outputs:
      DEPLOY_META_JSON: ${{ steps.encode.outputs.DEPLOY_META_JSON }}
    steps:
      - uses: actions/checkout@v4

      - name: Determine version
        id: get-version
        run: |
          if [ -f package.json ]; then
            # version from package.json
            VERSION=$(jq -r .version package.json)
          elif git describe --tags --abbrev=0 >/dev/null 2>&1; then
            # fallback to latest tag
            VERSION=$(git describe --tags --abbrev=0)
          else
            # fallback to short SHA
            VERSION=${GITHUB_SHA::8}
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Encode metadata JSON
        id: encode
        run: |
          JSON=$(jq -n \
            --arg product "Pathway" \
            --arg branch  "${{ inputs.BRANCH }}" \
            --arg version "$VERSION" \
            --arg env     "${{ inputs.ENV }}" \
            --arg status  "${{ needs.build.result }}" \
            --arg build   "${{ github.run_number }}" \
            '{
              product: $product,
              branch:  $branch,
              version: $version,
              env:     $env,
              status:  $status,
              build:   $build
            }'
          )
          echo "DEPLOY_META_JSON=$(echo "$JSON" | base64 -w0)" >> $GITHUB_OUTPUT

  notify:
    needs: prepare-json
    uses: ./.github/workflows/teams-email-notification-source.yml@main

    # these flow into the reusable workflow's `inputs:` block
    with:
      DEPLOY_META_JSON: ${{ needs.prepare-json.outputs.DEPLOY_META_JSON }}
      RECIPIENTS:        ${{ inputs.RECIPIENTS }}
      SOURCE_REPO:       ${{ github.repository }}
      SOURCE_RUN_ID:     ${{ github.run_id }}

    # secrets must go under `secrets:`, not `with:`
    secrets:
      TEAMS_WEBHOOK_URL: ${{ secrets.DEVSECOPS_TEAMS_HOOK }}
