name: 'Terraform GitHub Actions'

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:
    inputs:
      environment:
        description: "env (dev|prd)"
        required: true
        default: "prd"

jobs:
  terraform_plan:
    name: 'Terraform'
    runs-on: arc-rs-nonprod

    env:
      ENVIRONMENT: ${{ github.event.inputs.environment || 'prd' }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_DEFAULT_REGION: us-east-1
      TF_VERSION: "1.6.6"

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate GitHub App token (for private modules/repos)
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GHAPP_REPO_ACCESS_APP_ID }}
          private-key: ${{ secrets.GHAPP_REPO_ACCESS_APP_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Update Git Config
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          git config --global url."https://${{ github.actor }}:${{ env.GH_TOKEN }}@github.com/QXDSOSandboxOrg/".insteadOf "https://github.com/QXDSOSandboxOrg/"
          cat ~/.gitconfig

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false

      - name: Verify Terraform install
        run: |
          which terraform
          terraform version
        working-directory: ./quest-eks-addons

      - name: Clean Terraform cache
        run: rm -rf .terraform
        working-directory: ./quest-eks-addons

      - name: Remove stale backend files (safety check)
        run: |
          FILES=$(find tfbackends -name "*.tfbackend" | xargs grep -l "use_localfile\|use_lockfile" || true)
          if [ -z "$FILES" ]; then
            echo "✅ No stale backend files found."
          else
            echo "⚠️ Stale backend files detected:"
            echo "$FILES"
            echo "$FILES" | while read file; do
              rm -f "$file"
              echo "Removed: $file"
            done
          fi
        working-directory: ./quest-eks-addons

      - name: Print selected backend config
        run: cat tfbackends/orion-${{ env.ENVIRONMENT }}.tfbackend
        working-directory: ./quest-eks-addons

      - name: Terraform Init
        run: terraform init --reconfigure --backend-config=tfbackends/orion-${{ env.ENVIRONMENT }}.tfbackend
        working-directory: ./quest-eks-addons

      - name: Verify files (debug)
        run: |
          pwd
          ls -la
          ls -la tfvars
          ls -la tfbackends
          ls -la modules
        working-directory: ./quest-eks-addons

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./quest-eks-addons

      - name: Terraform Plan
        run: terraform plan -var-file=tfvars/orion-${{ env.ENVIRONMENT }}.tfvars
        working-directory: ./quest-eks-addons
