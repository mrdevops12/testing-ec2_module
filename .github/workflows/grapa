modules/grafana/variables.tf


variable "namespace" {
  description = "Namespace to deploy Grafana (use the same as Prometheus, e.g. monitoring)"
  type        = string
}

variable "grafana_chart_repo" {
  description = "OCI base for ECR (e.g. oci://817786531545.dkr.ecr.us-east-1.amazonaws.com)"
  type        = string
}

variable "grafana_chart_version" {
  description = "Grafana chart version (the tag you pushed to ECR, e.g. 8.6.2)"
  type        = string
}

variable "host" {
  description = "FQDN for Grafana (e.g. grafana.devops-tools.prd.aws.qdx.com)"
  type        = string
}

variable "alb_scheme" {
  description = "ALB scheme: internal | internet-facing"
  type        = string
  default     = "internal"
}

variable "admin_user" {
  description = "Grafana admin user (optional)"
  type        = string
  default     = "admin"
}

variable "admin_password" {
  description = "Grafana admin password (optional). Leave empty to let the chart generate one."
  type        = string
  default     = ""
  sensitive   = true
}

variable "prometheus_url" {
  description = "Prometheus URL for default datasource"
  type        = string
  default     = "http://kube-prometheus-stack-prometheus.monitoring:9090"
}



modules/grafana/main.tf

locals {
  # Base values (HTTP-only ALB, internal)
  base_values = {
    service = {
      type = "ClusterIP"
      port = 80
    }

    # Optional but recommended so redirects/links are correct
    grafana.ini = {
      server = {
        root_url = "http://${var.host}"
      }
    }

    # Default Prometheus datasource
    datasources = {
      "datasources.yaml" = {
        apiVersion  = 1
        datasources = [{
          name      = "Prometheus"
          type      = "prometheus"
          access    = "proxy"
          url       = var.prometheus_url
          isDefault = true
        }]
      }
    }

    ingress = {
      enabled          = true
      ingressClassName = "alb"
      annotations = {
        "kubernetes.io/ingress.class"            = "alb"    # for older clusters
        "alb.ingress.kubernetes.io/scheme"       = var.alb_scheme
        "alb.ingress.kubernetes.io/target-type"  = "ip"
        "alb.ingress.kubernetes.io/listen-ports" = "[{\"HTTP\":80}]"  # HTTP only now
        # NOTE: no certificate-arn / ssl-redirect here; we’ll add later when you switch to HTTPS
      }
      hosts = [{
        host  = var.host
        paths = [{
          path     = "/"
          pathType = "Prefix"
        }]
      }]
      tls = []  # no TLS entries for now
    }
  }

  # Only set admin creds if you provide a password
  cred_values = var.admin_password != "" ? {
    adminUser     = var.admin_user
    adminPassword = var.admin_password
  } : {}
}

resource "helm_release" "grafana" {
  name             = "grafana"
  namespace        = var.namespace
  create_namespace = false

  # For OCI charts:
  #   repository = "oci://<registry>"
  #   chart      = "<repo path>"
  repository = var.grafana_chart_repo                     # e.g. oci://817786531545.dkr.ecr.us-east-1.amazonaws.com
  chart      = "actions/grafana"                          # you pushed to /actions/grafana
  version    = var.grafana_chart_version
  atomic     = true

  values = [ yamlencode(merge(local.base_values, local.cred_values)) ]
}


addons.tf

module "grafana" {
  source                = "./modules/grafana"

  namespace             = "monitoring"    # same ns as Prometheus (do NOT create again)
  grafana_chart_repo    = var.grafana_chart_repo
  grafana_chart_version = var.grafana_chart_version

  host                  = var.grafana_host
  alb_scheme            = var.grafana_alb_scheme

  # Optional (set if you want a known login now; else chart generates a random one)
  admin_user            = "admin"
  admin_password        = var.grafana_admin_password

  # Prometheus in the same cluster/namespace
  prometheus_url        = "http://kube-prometheus-stack-prometheus.monitoring:9090"
}


variables.tf

variable "grafana_chart_repo"        { type = string }
variable "grafana_chart_version"     { type = string }
variable "grafana_host"              { type = string }
variable "grafana_alb_scheme"        { type = string  default = "internal" }
variable "grafana_admin_password"    { type = string  default = "", sensitive = true }



.tfvars

grafana_chart_repo        = "oci://817786531545.dkr.ecr.us-east-1.amazonaws.com"
grafana_chart_version     = "8.6.2"
grafana_host              = "grafana.devops-tools.prd.aws.qdx.com"
grafana_alb_scheme        = "internal"

# Optional for a predictable login (or pass via TF_VAR_… in Actions)
# grafana_admin_password  = "Strong#Pass123"

