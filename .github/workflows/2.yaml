name: Teams + Email Notification Workflow

on:
  workflow_call:
    inputs:
      DEPLOY_META_JSON:
        description: 'Base64-encoded JSON with deployment metadata'
        required: true
        type: string

    secrets:
      TEAMS_WEBHOOK_URL:
        description: 'Teams Incoming Webhook URL'
        required: true

jobs:
  notify-and-email:
    # pick the runner that has Python + network access to your mail server
    runs-on: arc-rs-nonprod

    steps:
      # 1. Check out your code (so .github/workflows/mail.py is available)
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Capture the build start time
      - name: Capture build start time
        run: echo "BUILD_START=$(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_ENV

      # 3. Decode the base64 payload into ENV vars
      - name: Decode DEPLOY_META_JSON → ENV vars
        id: parse
        run: |
          echo "${{ inputs.DEPLOY_META_JSON }}" | base64 -d > deploy-meta.json
          for k in $(jq -r 'keys[]' deploy-meta.json); do
            UPPER=$(echo $k | tr '[:lower:]' '[:upper:]')
            VAL=$(jq -r --arg k "$k" '.[$k]' deploy-meta.json)
            echo "$UPPER=$VAL" >> $GITHUB_ENV
          done

      # 4. Set defaults for any missing fields
      - name: Set defaults for missing fields
        run: |
          : "${BRANCH:=main}"
          : "${VERSION:=0.0.1}"
          : "${PRODUCT:=unknown-module}"
          : "${ENV:=dev}"
          echo "BRANCH=$BRANCH"   >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "PRODUCT=$PRODUCT" >> $GITHUB_ENV
          echo "ENV=$ENV"         >> $GITHUB_ENV

      # 5. Choose theme color & emoji
      - name: Set theme color & emoji
        run: |
          case "$STATUS" in
            success)   echo "THEME_COLOR=#00FF00" >> $GITHUB_ENV; echo "STATUS_EMOJI=✅" >> $GITHUB_ENV; echo "STATUS_MESSAGE=SUCCESSFUL" >> $GITHUB_ENV ;;
            failed)    echo "THEME_COLOR=#FF0000" >> $GITHUB_ENV; echo "STATUS_EMOJI=❌" >> $GITHUB_ENV; echo "STATUS_MESSAGE=FAILED"     >> $GITHUB_ENV ;;
            cancelled) echo "THEME_COLOR=#FFA500" >> $GITHUB_ENV; echo "STATUS_EMOJI=⚠️" >> $GITHUB_ENV; echo "STATUS_MESSAGE=CANCELLED" >> $GITHUB_ENV ;;
            *)         echo "THEME_COLOR=#808080" >> $GITHUB_ENV; echo "STATUS_EMOJI=❓" >> $GITHUB_ENV; echo "STATUS_MESSAGE=UNKNOWN"   >> $GITHUB_ENV ;;
          esac

      # 6. Build the Teams JSON payload
      - name: Build message.json for Teams & Email
        run: |
          BUILD_END=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          COMMIT_ID=${GITHUB_SHA::8}
          COMMIT_MSG=$(git log -1 --pretty=format:'%s')
          jq -n \
            --arg themeColor "$THEME_COLOR" \
            --arg status "$STATUS_MESSAGE" \
            --arg emoji "$STATUS_EMOJI" \
            --arg actor "${{ github.actor }}" \
            --arg start "$BUILD_START" \
            --arg end "$BUILD_END" \
            --arg commit "${COMMIT_ID} - ${COMMIT_MSG}" \
            --arg runId "${{ github.run_number }}" \
            --arg repo "${{ github.repository }}" \
            --arg branch "$BRANCH" \
            --arg version "$VERSION" \
            --arg module "$PRODUCT" \
            --arg env "$ENV" \
            '{
              "@type":"MessageCard","@context":"https://schema.org/extensions",
              "themeColor":$themeColor,
              "summary":"Build \($status)",
              "sections":[
                {"activityTitle":"🔧 **Build Information**","facts":[
                   {"name":"Status","value":"\($emoji) \($status)"},
                   {"name":"Triggered By","value":$actor},
                   {"name":"Start Time","value":$start},
                   {"name":"End Time","value":$end},
                   {"name":"Commit","value":$commit},
                   {"name":"Workflow Run","value":"#\($runId)"}
                ],"markdown":true},
                {"activityTitle":"🚀 **Release Information**","facts":[
                   {"name":"Source Branch","value":"`\($branch)`"},
                   {"name":"Artifact Version","value":"`\($version)`"},
                   {"name":"Application Module","value":$module},
                   {"name":"Environment","value":$env}
                ],"markdown":true}
              ],
              "potentialAction":[
                {"@type":"OpenUri","name":"View Workflow Run","targets":[{"os":"default","uri":"https://github.com/\($repo)/actions/runs/\($runId)"}]},
                {"@type":"OpenUri","name":"View Branch Commits","targets":[{"os":"default","uri":"https://github.com/\($repo)/commits/\($branch)"}]}
              ]
            }' > message.json

      # 7. Send to Teams
      - name: Send Teams Notification
        run: |
          curl -X POST -H "Content-Type: application/json" \
               -d @message.json "${{ secrets.TEAMS_WEBHOOK_URL }}"

      # 8. Build HTML email body (same data)
      - name: Build email_body.html
        run: |
          jq -r '
            "<html><body><h2>Build & Release Notification</h2><table border=\"1\" cellpadding=\"6\" cellspacing=\"0\">" +
            "<tr><td><b>Status</b></td><td>" + .sections[0].facts[0].value + "</td></tr>" +
            "<tr><td><b>Triggered By</b></td><td>" + .sections[0].facts[1].value + "</td></tr>" +
            "<tr><td><b>Start Time</b></td><td>" + .sections[0].facts[2].value + "</td></tr>" +
            "<tr><td><b>End Time</b></td><td>" + .sections[0].facts[3].value + "</td></tr>" +
            "<tr><td><b>Commit</b></td><td>" + .sections[0].facts[4].value + "</td></tr>" +
            "<tr><td><b>Workflow Run</b></td><td>" + .sections[0].facts[5].value + "</td></tr>" +
            "<tr><td><b>Source Branch</b></td><td>" + .sections[1].facts[0].value + "</td></tr>" +
            "<tr><td><b>Artifact Version</b></td><td>" + .sections[1].facts[1].value + "</td></tr>" +
            "<tr><td><b>Application Module</b></td><td>" + .sections[1].facts[2].value + "</td></tr>" +
            "<tr><td><b>Environment</b></td><td>" + .sections[1].facts[3].value + "</td></tr>" +
            "</table>" +
            "<p><a href=\"https://github.com/${{ github.repository }}/actions/runs/${{ github.run_number }}\">View Workflow Run</a></p>" +
            "<p><a href=\"https://github.com/${{ github.repository }}/commits/$BRANCH\">View Branch Commits</a></p>" +
            "</body></html>"
          ' message.json > email_body.html

      # 9. Send the email via your mail.py
      - name: Send Email Notification to Outlook
        run: |
          TO_ADDRESS="yourname@yourcompany.com"
          SUBJECT="[$(date -u +'%Y-%m-%d %H:%M UTC')] Build #${{ github.run_number }}: $STATUS_MESSAGE"
          python3 .github/workflows/mail.py "$TO_ADDRESS" "$SUBJECT" email_body.html
