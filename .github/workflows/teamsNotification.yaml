name: Teams Notification Workflow

on:
  workflow_call:
    inputs:
      DEPLOY_META_JSON:
        description: 'Base64-encoded JSON with deployment metadata'
        required: true
        type: string
    secrets:
      TEAMS_WEBHOOK_URL:
        description: 'Teams Incoming Webhook URL'
        required: true

jobs:
  send-notification:
    runs-on: ubuntu-latest
    steps:
      - name: Decode DEPLOY_META_JSON and export keys
        id: parse-json
        run: |
          echo "${{ inputs.DEPLOY_META_JSON }}" | base64 -d > deploy-meta.json
          cat deploy-meta.json

          # Export all fields to environment variables (UPPERCASE)
          for key in $(jq -r 'keys[]' deploy-meta.json); do
            value=$(jq -r --arg k "$key" '.[$k]' deploy-meta.json)
            var_name=$(echo "$key" | tr '[:lower:]' '[:upper:]')
            echo "$var_name=$value" >> $GITHUB_ENV
            echo "Exported: $var_name=$value"
          done

          # Build dynamic facts array
          FACTS=$(jq -n '[]')
          for key in $(jq -r 'keys[]' deploy-meta.json); do
            val=$(jq -r --arg k "$key" '.[$k]' deploy-meta.json)
            label=$(echo "$key" | sed 's/_/ /g' | sed -e "s/\b\(\w\)/\u\1/g")
            FACTS=$(echo "$FACTS" | jq --arg name "$label" --arg value "$val" '. += [{"name": $name, "value": $value}]')
          done
          echo "FACTS_JSON<<EOF" >> $GITHUB_ENV
          echo "$FACTS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Set status color and emoji
        run: |
          case "$STATUS" in
            success)
              echo "THEME_COLOR=#00FF00" >> $GITHUB_ENV
              echo "STATUS_EMOJI=✅" >> $GITHUB_ENV
              echo "STATUS_MESSAGE=SUCCESSFUL" >> $GITHUB_ENV
              ;;
            failure)
              echo "THEME_COLOR=#FF0000" >> $GITHUB_ENV
              echo "STATUS_EMOJI=❌" >> $GITHUB_ENV
              echo "STATUS_MESSAGE=FAILED" >> $GITHUB_ENV
              ;;
            cancelled)
              echo "THEME_COLOR=#FFA500" >> $GITHUB_ENV
              echo "STATUS_EMOJI=⚠️" >> $GITHUB_ENV
              echo "STATUS_MESSAGE=CANCELLED" >> $GITHUB_ENV
              ;;
            *)
              echo "THEME_COLOR=#808080" >> $GITHUB_ENV
              echo "STATUS_EMOJI=❓" >> $GITHUB_ENV
              echo "STATUS_MESSAGE=UNKNOWN" >> $GITHUB_ENV
              ;;
          esac

      - name: Send Teams Notification with dynamic facts
        run: |
          DEPLOYMENT_TIME=$(date -u +"%Y-%m-%d %H:%M:%S UTC")

          payload=$(jq -n             --arg themeColor "$THEME_COLOR"             --arg emoji "$STATUS_EMOJI"             --arg status "$STATUS_MESSAGE"             --arg time "$DEPLOYMENT_TIME"             --arg repo "${{ github.repository }}"             --arg actor "${{ github.actor }}"             --arg runId "${{ github.run_id }}"             --arg productName "$PRODUCT"             --argjson facts "$FACTS_JSON"             '{
              "@type": "MessageCard",
              "@context": "https://schema.org/extensions",
              "themeColor": $themeColor,
              "summary": "Deployment " + $status,
              "title": ($emoji + " Deployment " + $status + " - " + $productName),
              "sections": [{
                "activityTitle": "**Deployment Details**",
                "facts": $facts,
                "markdown": true
              }],
              "potentialAction": [
                {
                  "@type": "OpenUri",
                  "name": "View Workflow Run",
                  "targets": [{ "os": "default", "uri": "https://github.com/" + $repo + "/actions/runs/" + $runId }]
                },
                {
                  "@type": "OpenUri",
                  "name": "View Branch Commits",
                  "targets": [{ "os": "default", "uri": "https://github.com/" + $repo + "/commits/" + (.facts[] | select(.name == "Branch").value) }]
                }
              ]
            }'
          )

          echo "$payload" > message.json
          curl -X POST -H "Content-Type: application/json" -d @message.json "${{ secrets.TEAMS_WEBHOOK_URL }}"
