gha-eks-addons/quest-eks-addons/modules/grafana/main.tf

locals {
  grafana_ingress_annotations = merge(
    {
      "kubernetes.io/ingress.class"                 = "alb"
      "alb.ingress.kubernetes.io/scheme"           = var.grafana_alb_scheme          # "internal" or "internet-facing"
      "alb.ingress.kubernetes.io/target-type"      = "ip"
      "alb.ingress.kubernetes.io/healthcheck-path" = "/api/health"
      "alb.ingress.kubernetes.io/success-codes"    = "200-399"
      "alb.ingress.kubernetes.io/healthcheck-port" = "traffic-port"

      # >>> these two make Grafana and Prometheus share the SAME ALB <<<
      "alb.ingress.kubernetes.io/group.name"  = "monitoring"
      "alb.ingress.kubernetes.io/group.order" = "10"
    },
    # DO NOT include certificate-arn here for HTTP-only
    var.grafana_certificate_arn != "" ? {} : {},
    var.grafana_external_dns_hostname != "" ? {
      "external-dns.alpha.kubernetes.io/hostname" = var.grafana_external_dns_hostname
    } : {}
  )
}



helm_release "grafana":



values = [
  yamlencode({
    "grafana.ini" = {
      server = {
        domain   = var.grafana_host
        root_url = "http://${var.grafana_host}"  # HTTP here
      }
    }

    service = { type = "ClusterIP" }

    ingress = {
      enabled          = true
      ingressClassName = "alb"
      annotations      = local.grafana_ingress_annotations
      hosts            = [var.grafana_host]
      path             = "/"
      pathType         = "Prefix"
    }
  })
]





gha-eks-addons/quest-eks-addons/modules/prometheus_stack/variables.tf


variable "prometheus_host" {
  description = "DNS host users will hit for Prometheus (e.g., prometheus.devops-tools.example.com)"
  type        = string
}


gha-eks-addons/quest-eks-addons/modules/prometheus_stack/main.tf



values = [
  yamlencode({
    grafana = {
      enabled = false
    }

    prometheus = {
      ingress = {
        enabled          = true
        ingressClassName = "alb"
        annotations = {
          "kubernetes.io/ingress.class"                 = "alb"
          "alb.ingress.kubernetes.io/scheme"           = var.grafana_alb_scheme      # reuse same scheme
          "alb.ingress.kubernetes.io/target-type"      = "ip"
          "alb.ingress.kubernetes.io/healthcheck-path" = "/-/healthy"
          "alb.ingress.kubernetes.io/success-codes"    = "200"
          "alb.ingress.kubernetes.io/healthcheck-port" = "traffic-port"

          # >>> share the exact same ALB as Grafana <<<
          "alb.ingress.kubernetes.io/group.name"  = "monitoring"
          "alb.ingress.kubernetes.io/group.order" = "20"
        }
        hosts    = [var.prometheus_host]
        paths    = ["/"]
        pathType = "Prefix"
      }
    }
  }),
  file("${path.module}/arc-scrape-config.yaml")
]



gha-eks-addons/quest-eks-addons/tfvars/orion-<ENV>.tfvars

# Existing values you already have...
grafana_host          = "grafana-orion.devops-tools.prd.aws.qdx.com"
grafana_alb_scheme    = "internal"   # or "internet-facing"

# New:
prometheus_host       = "prometheus-orion.devops-tools.prd.aws.qdx.com"

addon.tf


module "prometheus_stack" {
  source                   = "./modules/prometheus_stack"
  namespace                = "monitoring"
  prometheus_chart_repo    = var.prometheus_chart_repo
  prometheus_chart_version = var.prometheus_chart_version

  # âžœ REQUIRED (this is why validate failed)
  prometheus_host          = var.prometheus_host

  # (optional but useful if you want the same ALB behavior as Grafana)
  prometheus_alb_scheme    = var.prometheus_alb_scheme        # "internal" | "internet-facing"
  monitoring_alb_group     = var.monitoring_alb_group          # to share the same ALB as Grafana
}


root:


variable "prometheus_host" {
  description = "DNS host to expose Prometheus on (e.g., prometheus.example.com)"
  type        = string
}

variable "prometheus_alb_scheme" {
  description = "ALB scheme for Prometheus (internal | internet-facing)"
  type        = string
  default     = "internal"
}

variable "monitoring_alb_group" {
  description = "ALB Ingress group name to place Grafana & Prometheus on the same ALB"
  type        = string
  default     = "monitoring"
}
