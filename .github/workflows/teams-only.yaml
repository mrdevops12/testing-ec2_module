# .github/workflows/teams-notification-only.yml
name: Teams Notification Only

on:
  workflow_call:
    inputs:
      DEPLOY_META_JSON:
        description: 'Base64-encoded JSON with deployment metadata (any keys)'
        required: true
        type: string

    secrets:
      TEAMS_WEBHOOK_URL:
        description: 'Teams Incoming Webhook URL'
        required: true

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Capture timestamps
        run: |
          echo "BUILD_START=$(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_ENV
          echo "BUILD_END=$(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_ENV

      - name: Setup Python
        uses: actions/setup-python@v4

      - name: Decode & send Teams card
        env:
          INPUT_DEPLOY_META_JSON: ${{ inputs.DEPLOY_META_JSON }}
          TEAMS_WEBHOOK_URL:     ${{ secrets.TEAMS_WEBHOOK_URL }}
        run: |
          python3 << 'EOF'
          import os, json, base64, subprocess, requests

          # Decode the base64 payload
          md = json.loads(base64.b64decode(os.environ['INPUT_DEPLOY_META_JSON']))

          # Standard CI context facts
          start   = os.environ['BUILD_START']
          end     = os.environ['BUILD_END']
          sha     = os.environ['GITHUB_SHA'][:8]
          msg     = subprocess.check_output(['git','log','-1','--pretty=format:%s']).decode()
          run_id  = os.environ['GITHUB_RUN_NUMBER']
          actor   = os.environ['GITHUB_ACTOR']
          status  = md.get('status','').upper()

          emoji_map = {'SUCCESS':'✅','FAILED':'❌','CANCELLED':'⚠️'}
          color_map = {'SUCCESS':'#00FF00','FAILED':'#FF0000','CANCELLED':'#FFA500'}
          emoji = emoji_map.get(status, 'ℹ️')
          theme = color_map.get(status, '#808080')

          build_facts = [
            {'name':'Status',       'value':f"{emoji} {status}"},
            {'name':'Triggered By', 'value':actor},
            {'name':'Start Time',   'value':start},
            {'name':'End Time',     'value':end},
            {'name':'Commit',       'value':f"{sha} - {msg}"},
            {'name':'Workflow Run', 'value':f"#{run_id}"}
          ]

          # Dynamic Release Information: iterate any keys except 'status'
          release_facts = []
          for key, value in md.items():
            if key.lower() == 'status':
              continue
            name = key.replace('_',' ').title()
            release_facts.append({'name': name, 'value': str(value)})

          # Assemble and send the MessageCard
          card = {
            '@type':       'MessageCard',
            '@context':    'https://schema.org/extensions',
            'themeColor':  theme,
            'summary':     f"Build {status}",
            'sections': [
              {'activityTitle':'🔧 Build Information',   'facts': build_facts,   'markdown': True},
              {'startGroup': True,                       'text': '───────────────', 'markdown': True},
              {'startGroup': True, 'activityTitle':'🚀 Release Information', 'facts': release_facts, 'markdown': True}
            ]
          }

          requests.post(
            os.environ['TEAMS_WEBHOOK_URL'],
            json=card,
            headers={'Content-Type':'application/json'}
          ).raise_for_status()
          EOF
