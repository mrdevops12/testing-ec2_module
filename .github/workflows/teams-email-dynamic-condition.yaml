name: Teams + Email Notification Workflow

on:
  workflow_call:
    inputs:
      DEPLOY_META_JSON:
        description: 'Base64-encoded JSON with deployment metadata (any keys)'
        required: true
        type: string
      EMAIL_TO:
        description: 'Comma-separated list of email recipients'
        required: false
        type: string
        default: ""
      SOURCE_REPO:
        description: 'owner/repo of the caller (for links)'
        required: true
        type: string
      SOURCE_RUN_ID:
        description: 'run_id of the caller workflow (for links)'
        required: true
        type: string
      SEND_TEAMS:
        description: 'Post to Microsoft Teams?'
        type: boolean
        default: true
      SEND_EMAIL:
        description: 'Send HTML email?'
        type: boolean
        default: true
    secrets:
      TEAMS_WEBHOOK_URL:
        description: 'Teams incoming webhook'
        required: false   # only needed if SEND_TEAMS=true

jobs:
  notify-and-email:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Capture timestamps
        run: |
          echo "BUILD_START=$(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_ENV
          echo "BUILD_END=$(date -u +'%Y-%m-%d %H:%M:%S UTC')"   >> $GITHUB_ENV

      - uses: actions/setup-python@v4

      - name: Validate required inputs (only when needed)
        run: |
          if [ "${{ inputs.SEND_EMAIL }}" = "true" ] && [ -z "${{ inputs.EMAIL_TO }}" ]; then
            echo "❌ Missing EMAIL_TO but SEND_EMAIL=true" >&2
            exit 1
          fi
          if [ "${{ inputs.SEND_TEAMS }}" = "true" ] && [ -z "${{ secrets.TEAMS_WEBHOOK_URL }}" ]; then
            echo "❌ Missing TEAMS_WEBHOOK_URL but SEND_TEAMS=true" >&2
            exit 1
          fi
          if [ -z "${{ inputs.SOURCE_REPO }}" ]; then
            echo "❌ Missing SOURCE_REPO" >&2
            exit 1
          fi
          if [ -z "${{ inputs.SOURCE_RUN_ID }}" ]; then
            echo "❌ Missing SOURCE_RUN_ID" >&2
            exit 1
          fi

      - name: Build artifacts (card.json & email_body.html)
        env:
          INPUT_DEPLOY_META_JSON: ${{ inputs.DEPLOY_META_JSON }}
          SOURCE_REPO:           ${{ inputs.SOURCE_REPO }}
          SOURCE_RUN_ID:         ${{ inputs.SOURCE_RUN_ID }}
          BUILD_START:           ${{ env.BUILD_START }}
          BUILD_END:             ${{ env.BUILD_END }}
          GITHUB_SHA:            ${{ github.sha }}
          GITHUB_ACTOR:          ${{ github.actor }}
        run: |
          python3 << 'EOF'
          import os, json, base64, subprocess, pathlib

          md = json.loads(base64.b64decode(os.environ['INPUT_DEPLOY_META_JSON']))

          status   = md.pop('status', '').upper()
          build_no = md.pop('build', '')
          start    = os.environ['BUILD_START']
          end      = os.environ['BUILD_END']
          sha      = os.environ['GITHUB_SHA'][:8]
          msg      = subprocess.check_output(['git','log','-1','--pretty=format:%s']).decode(errors='ignore')
          actor    = os.environ['GITHUB_ACTOR']
          repo     = os.environ['SOURCE_REPO']
          run_id   = os.environ['SOURCE_RUN_ID']

          emoji_map = {'SUCCESS':'✅','FAILED':'❌','CANCELLED':'⚠️'}
          color_map = {'SUCCESS':'#00FF00','FAILED':'#FF0000','CANCELLED':'#FFA500'}
          emoji = emoji_map.get(status, 'ℹ️')
          theme = color_map.get(status, '#808080')

          build_facts = [
            {'name':'Status',        'value':f"{emoji} {status}"},
            {'name':'Build Number',  'value':f"#{build_no}"},
            {'name':'Triggered By',  'value':actor},
            {'name':'Start Time',    'value':start},
            {'name':'End Time',      'value':end},
            {'name':'Commit',        'value':f"{sha} - {msg}"},
            {'name':'Workflow Run',  'value':f"#{run_id}"}
          ]
          release_facts = [{'name': k.replace('_',' ').title(), 'value': str(v)} for k,v in md.items()]

          card = {
            "@type":"MessageCard",
            "@context":"https://schema.org/extensions",
            "themeColor": theme,
            "summary": f"Build {status}",
            "sections": [
              {"activityTitle":"🔧 Build Information","facts":build_facts,"markdown":True},
              {"startGroup":True,"text":"───────────────","markdown":True},
              {"startGroup":True,"activityTitle":"🚀 Release Information","facts":release_facts,"markdown":True},
              {"startGroup": True,
               "text": f"[View Workflow Run](https://github.com/{repo}/actions/runs/{run_id})",
               "markdown": True}
            ],
            "potentialAction": [
              {"@type":"OpenUri","name":"View Workflow Run",
               "targets":[{"os":"default","uri":f"https://github.com/{repo}/actions/runs/{run_id}"}]},
              {"@type":"OpenUri","name":"View Branch Commits",
               "targets":[{"os":"default","uri":f"https://github.com/{repo}/commits/{md.get('branch','')}"}]}
            ]
          }

          pathlib.Path('card.json').write_text(json.dumps(card))

          rows1 = "\n".join(f"<tr><td><b>{f['name']}</b></td><td>{f['value']}</td></tr>" for f in build_facts)
          rows2 = "\n".join(f"<tr><td><b>{f['name']}</b></td><td>{f['value']}</td></tr>" for f in release_facts)
          html = f"""
          <html><body>
            <h2>Build Information</h2>
            <table border="1" cellpadding="6" cellspacing="0">{rows1}</table>
            <h2>Release Information</h2>
            <table border="1" cellpadding="6" cellspacing="0">{rows2}</table>
            <p><a href="https://github.com/{repo}/actions/runs/{run_id}">View Workflow Run</a></p>
          </body></html>
          """
          pathlib.Path('email_body.html').write_text(html)
          EOF

      - name: Post to Teams
        if: inputs.SEND_TEAMS == true
        env:
          TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}
        run: |
          curl -sS -X POST -H "Content-Type: application/json" \
            -d @card.json "$TEAMS_WEBHOOK_URL"

      - name: Send Email(s)
        if: inputs.SEND_EMAIL == true && inputs.EMAIL_TO != ''
        env:
          BUILD_END:     ${{ env.BUILD_END }}
          SOURCE_RUN_ID: ${{ inputs.SOURCE_RUN_ID }}
        run: |
          SUBJECT="[${BUILD_END}] Build #${SOURCE_RUN_ID}"
          for addr in $(echo "${{ inputs.EMAIL_TO }}" | tr ',' ' '); do
            echo "Sending to $addr"
            python3 .github/workflows/mail.py "$addr" "$SUBJECT" email_body.html
          done
